list=[]              empty list create
print(list)
print(type(list))

a=list()
print(a)


list1 = [] 
list2 = [5, 6, 7, 8]                        concatenate
 
result = list1 + list2 
 
print ("Concatenated list: " + str(result))


list1 = [] 
list2 = [5, 6, 7, 8] 
 
result = list1 + list2 
 
print ("Concatenated list: " + str(result))
list2.extend([8])                                  add elements in list
list2.extend([9])
list2.extend([1])
list2.extend([5])
list2.extend([6])
list2.extend([7])
list2.extend([8])
list2.extend([1])
print(list2)
print(type(list2))


list1 = [] 
list2 = [5, 6, 7, 8] 
 
result = list1 + list2 


 
print ("Concatenated list: " + str(result))
list2.extend([8])
list2.extend([9])
list2.extend([1])
list2.extend([5])
list2.extend([6])
list2.extend([7])
list2.extend([8])                 frequency of 8
list2.extend([1])
print(list2)
print(type(list2))

x = 8
print("{} has occured {} times".format(x,list2.count(x)))


list = eval(input("Enter list:"))
length = len(list)
mean = sum = 0
for i in range(0,length):
  sum = sum+list[i]
  mean=sum/length                         mean of list
print("given list is:",list)
print("The mean of given list is:",mean)


list=[2,3,5,6,7,8]   sum of list
total = sum(list)
print("the sum is:",total)


list=[2,3,5,6,7,8]
print("the min element is:",min(list)) min and max of list
print("the max element is:",max(list))

num_list = [21, 13, 19, 3,11,5]
# Sort the list
num_list.sort()
# Finding the position of the median
if len(num_list) % 2 == 0:                         median of list
   first_median = num_list[len(num_list) // 2]
   second_median = num_list[len(num_list) // 2 - 1]
   median = (first_median + second_median) / 2

print(num_list)
print("Median of above list is: " + str(median))

list1 = [1,2,4,6,3,8,4,7]
result = []                        remove duplicate and print in tuple
for i in list1:
    if i in list1:
         if i not in result:
                result.append(i)
print(tuple(result))
           
tuple1 = (1,4,5,6,7,8)
tuple2 = (5,6,7,8,9)  tuple
print(tuple1)
print(tuple2)


tuple1 = (1,4,5,6,7,8)
tuple2 = (5,6,7,8,9)

tp1_set=set(tuple1) common elements
tp2_set=set(tuple2)
 
common_inter = (tp1_set & tp2_set)
print(common_inter)


tuple1 = (1,4,5,6,7,8)
tuple2 = (5,6,7,8,9)

concat = tuple1+tuple2  concat
print(concat)


tuple1 = (1,4,5,6,7,8)
tuple2 = (5,6,7,8,9)

concat = tuple1+tuple2     remove duplicate elements
print(set(concat))


tuple1 = (1,4,5,6,7,8)
tuple2 = (5,6,7,8,9)
                               index of 9
concat = tuple1+tuple2
print(set(concat))
print(tuple2.index(9))

tuple1 = (1,4,5,6,7,8)
tuple2 = (5,6,7,8,9)

tuple1 = tuple1*3    multiply elements
tuple2 = tuple2*3

print(tuple1)
print(tuple2)


set1 ={}
set2 ={}     empty sets
print(set1)
print(set2)


t1 =[]
t2 =[7,8,9,1,2,3,4,5,0]
set1 = set(t1)               update set1 and set2 values
set2 = set(t2)
set1.update(set2)
print(set1)

t1 =[4,5,6,0]
t2 =[]
set1 = set(t1)
set2 = set(t2)
set2.update(set1)
print(set2)


x = set([7,8,9,1,2,3,4,5,0]) subset
y = set([4,5,6,0])
print(y.issubset(x))


dict = {1:["english","maths","science"], 2:[10,20,30], 3:["bio-botany","bio-zoology","Algebra"]}
print(dict) dictionary

dict = {1:["english","maths","science"], 2:[10,20,30], 3:["bio-botany","bio-zoology","Algebra"]}
print(dict)

dict.values() print values 


a = [1,2,3,4,[100,101,102,"Computer_science"],200,203]   task-2
print(a[-3][3][9:16])
print(a[-3][3][0:8])


Li1 = [1,2,3,4,5,[11,22,33,44,55,[111,222,333,444],6666,7777],7777]

Output Prediction 

print(Li1[5][0])
print(Li1[5][6])
print(Li1[5][-2])
print(Li1[5][7])
print(Li1[6])
print(Li1[5][5][1])

print(Li1[-2][-1])


print(Li1[-2][2:4])

O/P:
11
6666
6666
7777
7777
222
7777
[33, 44]